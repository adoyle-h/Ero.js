Ext.data.JsonP.BaseError({"tagname":"class","name":"BaseError","autodetected":{},"files":[{"filename":"base_error.js","href":null},{"filename":"base_error.js","href":null}],"members":[{"name":"ERROR_STACK_SEPARATOR","tagname":"property","owner":"BaseError","id":"property-ERROR_STACK_SEPARATOR","meta":{}},{"name":"MESSAGE_CONNECTOR","tagname":"property","owner":"BaseError","id":"property-MESSAGE_CONNECTOR","meta":{}},{"name":"captureStackTrace","tagname":"property","owner":"BaseError","id":"property-captureStackTrace","meta":{}},{"name":"name","tagname":"property","owner":"BaseError","id":"property-name","meta":{}},{"name":"constructor","tagname":"method","owner":"BaseError","id":"method-constructor","meta":{}},{"name":"getBaseErrorStack","tagname":"method","owner":"BaseError","id":"method-getBaseErrorStack","meta":{"private":true}},{"name":"getBaseErrorStackFunc","tagname":"method","owner":"BaseError","id":"method-getBaseErrorStackFunc","meta":{"private":true}}],"alternateClassNames":[],"aliases":{},"id":"class-BaseError","extends":null,"singleton":null,"private":null,"mixins":[],"requires":[],"uses":[],"short_doc":"You should define your error class which inherits the BaseError class\n\nThe properties of BaseError instance：\n\n\nmeta: ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><div class='doc-contents'><p>You should define your error class which inherits the <code>BaseError</code> class</p>\n\n<p>The properties of BaseError instance：</p>\n\n<ul>\n<li>meta: {Object} The metadata for error.</li>\n<li>message: {String} The error message.</li>\n<li>[stack]: {String} The error stack. It is existed when <code>captureStackTrace</code> is <code>true</code>.</li>\n<li>captureStackTrace: {Boolean} Whether to capture the stack trace. Default to <code>true</code>.</li>\n<li>name: {String} The name of error class.</li>\n<li>ERROR_STACK_SEPARATOR: {String} The separator between multi error stacks.</li>\n<li>MESSAGE_CONNECTOR: {String} The connector between multi error messages.</li>\n</ul>\n\n\n<p>The <code>meta</code> is prior to <code>error.meta</code>, when their properties have same names.</p>\n\n<p>Usages:</p>\n\n<pre><code>new BaseError([meta][, error])\nnew BaseError(message[, params1, ... paramsN])\nnew BaseError([meta][, error], message[, params1, ... paramsN])\nnew BaseError([error][, meta][, message[, params1, ... paramsN]])\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ERROR_STACK_SEPARATOR' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BaseError'>BaseError</span><br/></div><a href='#!/api/BaseError-property-ERROR_STACK_SEPARATOR' class='name expandable'>ERROR_STACK_SEPARATOR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'><p>The separator for multi error stacks.</p>\n</div><div class='long'><p>The separator for multi error stacks.</p>\n</div></div></div><div id='property-MESSAGE_CONNECTOR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BaseError'>BaseError</span><br/></div><a href='#!/api/BaseError-property-MESSAGE_CONNECTOR' class='name expandable'>MESSAGE_CONNECTOR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'><p>The connector for multi error messages.</p>\n</div><div class='long'><p>The connector for multi error messages.</p>\n</div></div></div><div id='property-captureStackTrace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BaseError'>BaseError</span><br/></div><a href='#!/api/BaseError-property-captureStackTrace' class='name expandable'>captureStackTrace</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether to capture the stack trace. ...</div><div class='long'><p>Whether to capture the stack trace.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BaseError'>BaseError</span><br/></div><a href='#!/api/BaseError-property-name' class='name expandable'>name</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The name of error class. ...</div><div class='long'><p>The name of error class.</p>\n<p>Defaults to: <code>&#39;BaseError&#39;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BaseError'>BaseError</span><br/></div><strong class='new-keyword'>new</strong><a href='#!/api/BaseError-method-constructor' class='name expandable'>BaseError</a>( <span class='pre'>[error], [meta], [message], [paramsN]</span> ) : <a href=\"#!/api/BaseError\" rel=\"BaseError\" class=\"docClass\">BaseError</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>error</span> : Error (optional)<div class='sub-desc'><p>An instance of Error</p>\n<p>Defaults to: <code>null</code></p></div></li><li><span class='pre'>meta</span> : Object (optional)<div class='sub-desc'><p>A metadata for error</p>\n<p>Defaults to: <code>{}</code></p></div></li><li><span class='pre'>message</span> : String (optional)<div class='sub-desc'><p>A normal string or a string template with <code>%</code> placeholders</p>\n<p>Defaults to: <code>&#39;&#39;</code></p></div></li><li><span class='pre'>paramsN</span> : *... (optional)<div class='sub-desc'><p>Some parameters to replace the <code>%</code> placeholders in message.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/BaseError\" rel=\"BaseError\" class=\"docClass\">BaseError</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getBaseErrorStack' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BaseError'>BaseError</span><br/></div><a href='#!/api/BaseError-method-getBaseErrorStack' class='name expandable'>getBaseErrorStack</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getBaseErrorStackFunc' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='BaseError'>BaseError</span><br/></div><a href='#!/api/BaseError-method-getBaseErrorStackFunc' class='name expandable'>getBaseErrorStackFunc</a>( <span class='pre'>error, stackObj</span> ) : Function<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>error</span> : Object<div class='sub-desc'>\n<ul><li><span class='pre'>stack</span> : String<div class='sub-desc'>\n</div></li></ul></div></li><li><span class='pre'>stackObj</span> : Object<div class='sub-desc'>\n<ul><li><span class='pre'>stack</span> : String (optional)<div class='sub-desc'>\n</div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});